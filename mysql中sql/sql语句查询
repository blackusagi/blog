1.查询flight表中，Take_off_airport_name字段值重复的数据及重复次数；
select Take_off_airport_name,count(*) as count from flight group by Take_off_airport_name having count>1;

3.设置自增
ALTER TABLE `test` CHANGE `id` `id` INT(11) NOT NULL AUTO_INCREMENT;

4.设置主键
ALTER TABLE student ADD PRIMARY KEY(id);

SELECT count(*),Take_off_airport_code,Landing_airport_code from flight_info_copy
GROUP BY Take_off_airport_code,Landing_airport_code having count(*) > 1;


DELETE from flight_xin_copy WHERE (Take_off_airport_code,Landing_airport_code) in   
(SELECT Take_off_airport_code,Landing_airport_code from (SELECT Take_off_airport_code,Landing_airport_code FROM flight_info_copy GROUP BY Take_off_airport_code,Landing_airport_code HAVING COUNT(*)>1))   
AND  
id NOT in (SELECT id from (SELECT id FROM flight_info_copy GROUP BY Take_off_airport_code,Landing_airport_code HAVING COUNT(*)>1)); 


5.删除重复数据
DELETE FROM fangyuan WHERE ID IN ( 
 SELECT ID FROM ( SELECT MAX(ID) AS ID,NAME FROM fangyuan GROUP BY NAME HAVING COUNT(ID)>1 ) AS ss);
 
 
 select distinct my.A,my.B,my.C from my inner join zbx on my.a=zbx.a 
 where my.c=zbx.C 


select DISTINCT m.a, m.b, m.c from my m 
UNION
select DISTINCT z.a, z.b, z.c from zbx z 
where NOT EXISTS (SELECT 1 FROM MY WHERE A=Z.A AND B=Z.B AND C=Z.C)


select a,b,c,concat(a,b) D from
(select my.A,my.B,my.C  from my inner join zbx on my.a=zbx.a 
 where my.c=zbx.C group by my.A,my.B,my.C ) aa

select concat(a,b) a , c b, concat(a1,c1) c from
(SELECT A.A,A.B,A.C,b.a a1,b.b c1 FROM My a inner join zbx b on a.a= b.a and a.c=b.c group by a.a, a.b, a.c , b.a,b.b) aa 


DELETE from Person 
Where Id not in (
    Select Id 
    From(
    Select MIN(Id) as id
    From Person 
    Group by Email
   ) t
)

1.去除航线表中的重复数据，如果 起点到终点，终点到起点的数据只算作一条数据
   SELECT
    *
   FROM
    ydyl_planlines_copy a
   WHERE
    EXISTS (
     SELECT
      1
     FROM
      ydyl_planlines_copy b
     WHERE

     b.start_code = a.end_code
     AND b.end_code = a.start_code
     AND a.ID > b.id
    )
   OR
    NOT EXISTS (
     SELECT
      1
     FROM
      ydyl_planlines_copy b
     WHERE

     b.start_code = a.end_code
     AND b.end_code = a.start_code
    )

    GROUP BY id,start_code,end_code
    ORDER BY id


# 异步

from flask import Flask
import time
from concurrent.futures import ThreadPoolExecutor

executor = ThreadPoolExecutor(1)

app = Flask(__name__)


@app.route('/synchronize')
def update_redis():
    executor.submit(do_update)
    return 'ok'


def do_update():
    time.sleep(3)
    print('start update')


if __name__ == '__main__':
    app.run()

